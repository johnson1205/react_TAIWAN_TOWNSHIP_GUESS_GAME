[{"C:\\Users\\johns\\OneDrive\\桌面\\practice\\map\\src\\index.js":"1","C:\\Users\\johns\\OneDrive\\桌面\\practice\\map\\src\\App.js":"2","C:\\Users\\johns\\OneDrive\\桌面\\practice\\map\\src\\reportWebVitals.js":"3"},{"size":492,"mtime":1687020011163,"results":"4","hashOfConfig":"5"},{"size":2993,"mtime":1687100503287,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1686925804724,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"19hn302",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"C:\\Users\\johns\\OneDrive\\桌面\\practice\\map\\src\\index.js",[],[],[],"C:\\Users\\johns\\OneDrive\\桌面\\practice\\map\\src\\App.js",["19","20","21","22","23","24"],[],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, useMap } from 'react-leaflet'\nimport { Map, GeoJSON } from 'react-leaflet/GeoJSON'\nimport mapdata from \"./geo.json\"\nimport { color } from 'd3';\n\n\nfunction App() {\n  //./TOWN_MOI_1120317.json\n  /*\n  const geoEvent = (mapdata.features, layer) => {\n\n  };\n  */\n  /*\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      */\n  const {useState} = React;\n  let [isBingoWaiting, setIsBingoWaiting] = useState(0);\n  let [selectedTownName, setSelectedTownName] = useState();\n  let [randomQuetion, setRandomQuetion] = useState();\n  let [score, setScore] = useState(0);\n\n  useEffect(()=>{\n    const keys = Object.keys(mapdata.features);\n    const randIndex = Math.floor(Math.random() * keys.length);\n    setRandomQuetion(randomQuetion=mapdata.features[randIndex].properties.TOWNNAME);\n  },[]);\n  \n  const bingoAction = () => {\n    const keys = Object.keys(mapdata.features);\n    const randIndex = Math.floor(Math.random() * keys.length);\n    setRandomQuetion(randomQuetion=mapdata.features[randIndex].properties.TOWNNAME);\n    setScore(score=score+1);\n    setSelectedTownName(selectedTownName=\"\");\n    setIsBingoWaiting(isBingoWaiting=0);\n  }\n  \n  const mapFeature=(country, layer)=>{\n    layer.on({\n      mouseover: (e) => {\n        e.target.setStyle({\n          fillOpacity: 0.5,\n        });\n      },\n      mouseout: (e) => {\n        e.target.setStyle({\n          fillOpacity: 1,\n        });\n      },\n      click: (e) => {\n        if((randomQuetion===e.sourceTarget.feature.properties.TOWNNAME)&&(isBingoWaiting===0)){\n          setSelectedTownName(selectedTownName=e.sourceTarget.feature.properties.TOWNNAME);\n          setIsBingoWaiting(isBingoWaiting=1);\n          setTimeout(bingoAction,1000);\n        }\n        else if(isBingoWaiting===0){\n          setSelectedTownName(selectedTownName=e.sourceTarget.feature.properties.TOWNNAME);\n        }\n      }\n      \n    });\n  }\n  const mapStyle={\n    weight: 1,\n    fillOpacity: 1,\n    fillColor: \"rgb(128, 206, 197)\",\n    color: \"rgb(230,230,230)\",\n  };\n\n  const mapBound =[\n    [26.504979796639104, 116.100698791452],\n    [20.67667721806277, 125.49054604625438],\n  ]\n\n  return (\n    <div className='container'>\n      <MapContainer center={[23.6, 120.9738819]} zoom={7} minZoom={7} maxBounds={mapBound}>\n      <GeoJSON style={mapStyle} data={mapdata} onEachFeature={mapFeature}></GeoJSON>\n      </MapContainer>\n      <div className='right' align=\"center\" style={{backgroundColor: isBingoWaiting? \"rgb(67, 247, 67)\": \"rgba(204, 204, 204, 0.457)\"}}>\n        <div className='upper'>題目：{randomQuetion}</div>\n        <div className='middle'>所選擇的區域：{selectedTownName}</div>\n        <div className='score'>分數：<b>{score}</b></div>\n      </div>\n    </div>\n  ); \n}\n\nexport default App;\n","C:\\Users\\johns\\OneDrive\\桌面\\practice\\map\\src\\reportWebVitals.js",[],[],{"ruleId":"25","severity":1,"message":"26","line":2,"column":17,"nodeType":"27","messageId":"28","endLine":2,"endColumn":25},{"ruleId":"25","severity":1,"message":"29","line":3,"column":24,"nodeType":"27","messageId":"28","endLine":3,"endColumn":33},{"ruleId":"25","severity":1,"message":"30","line":3,"column":35,"nodeType":"27","messageId":"28","endLine":3,"endColumn":41},{"ruleId":"25","severity":1,"message":"31","line":4,"column":10,"nodeType":"27","messageId":"28","endLine":4,"endColumn":13},{"ruleId":"25","severity":1,"message":"32","line":6,"column":10,"nodeType":"27","messageId":"28","endLine":6,"endColumn":15},{"ruleId":"33","severity":1,"message":"34","line":31,"column":36,"nodeType":"35","endLine":31,"endColumn":83},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'TileLayer' is defined but never used.","'useMap' is defined but never used.","'Map' is defined but never used.","'color' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'randomQuetion' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression"]