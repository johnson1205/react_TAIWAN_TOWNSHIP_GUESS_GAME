{"ast":null,"code":"import _slicedToArray from \"C:/Users/johns/OneDrive/\\u684C\\u9762/practice/map/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context.js';\nexport function createContainerComponent(useElement) {\n  function ContainerComponent(props, forwardedRef) {\n    var _useElement$current = useElement(props).current,\n      instance = _useElement$current.instance,\n      context = _useElement$current.context;\n    useImperativeHandle(forwardedRef, function () {\n      return instance;\n    });\n    return props.children == null ? null : /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children);\n  }\n  return /*#__PURE__*/forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n  function OverlayComponent(props, forwardedRef) {\n    var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setOpen = _useState2[1];\n    var instance = useElement(props, setOpen).current.instance;\n    useImperativeHandle(forwardedRef, function () {\n      return instance;\n    });\n    useEffect(function updateOverlay() {\n      if (isOpen) {\n        instance.update();\n      }\n    }, [instance, isOpen, props.children]);\n    // @ts-ignore _contentNode missing in type definition\n    var contentNode = instance._contentNode;\n    return contentNode ? /*#__PURE__*/createPortal(props.children, contentNode) : null;\n  }\n  return /*#__PURE__*/forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n  function LeafComponent(props, forwardedRef) {\n    var instance = useElement(props).current.instance;\n    useImperativeHandle(forwardedRef, function () {\n      return instance;\n    });\n    return null;\n  }\n  return /*#__PURE__*/forwardRef(LeafComponent);\n}","map":{"version":3,"names":["React","forwardRef","useEffect","useImperativeHandle","useState","createPortal","LeafletProvider","createContainerComponent","useElement","ContainerComponent","props","forwardedRef","_useElement$current","current","instance","context","children","createElement","value","createDivOverlayComponent","OverlayComponent","_useState","_useState2","_slicedToArray","isOpen","setOpen","updateOverlay","update","contentNode","_contentNode","createLeafComponent","LeafComponent"],"sources":["C:/Users/johns/OneDrive/桌面/practice/map/node_modules/@react-leaflet/core/lib/component.js"],"sourcesContent":["import React, { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { LeafletProvider } from './context.js';\nexport function createContainerComponent(useElement) {\n    function ContainerComponent(props, forwardedRef) {\n        const { instance , context  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return props.children == null ? null : /*#__PURE__*/ React.createElement(LeafletProvider, {\n            value: context\n        }, props.children);\n    }\n    return /*#__PURE__*/ forwardRef(ContainerComponent);\n}\nexport function createDivOverlayComponent(useElement) {\n    function OverlayComponent(props, forwardedRef) {\n        const [isOpen, setOpen] = useState(false);\n        const { instance  } = useElement(props, setOpen).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        useEffect(function updateOverlay() {\n            if (isOpen) {\n                instance.update();\n            }\n        }, [\n            instance,\n            isOpen,\n            props.children\n        ]);\n        // @ts-ignore _contentNode missing in type definition\n        const contentNode = instance._contentNode;\n        return contentNode ? /*#__PURE__*/ createPortal(props.children, contentNode) : null;\n    }\n    return /*#__PURE__*/ forwardRef(OverlayComponent);\n}\nexport function createLeafComponent(useElement) {\n    function LeafComponent(props, forwardedRef) {\n        const { instance  } = useElement(props).current;\n        useImperativeHandle(forwardedRef, ()=>instance);\n        return null;\n    }\n    return /*#__PURE__*/ forwardRef(LeafComponent);\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,QAAQ,QAAQ,OAAO;AACnF,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,eAAe,QAAQ,cAAc;AAC9C,OAAO,SAASC,wBAAwBA,CAACC,UAAU,EAAE;EACjD,SAASC,kBAAkBA,CAACC,KAAK,EAAEC,YAAY,EAAE;IAC7C,IAAAC,mBAAA,GAAgCJ,UAAU,CAACE,KAAK,CAAC,CAACG,OAAO;MAAjDC,QAAQ,GAAAF,mBAAA,CAARE,QAAQ;MAAGC,OAAO,GAAAH,mBAAA,CAAPG,OAAO;IAC1BZ,mBAAmB,CAACQ,YAAY,EAAE;MAAA,OAAIG,QAAQ;IAAA,EAAC;IAC/C,OAAOJ,KAAK,CAACM,QAAQ,IAAI,IAAI,GAAG,IAAI,GAAG,aAAchB,KAAK,CAACiB,aAAa,CAACX,eAAe,EAAE;MACtFY,KAAK,EAAEH;IACX,CAAC,EAAEL,KAAK,CAACM,QAAQ,CAAC;EACtB;EACA,OAAO,aAAcf,UAAU,CAACQ,kBAAkB,CAAC;AACvD;AACA,OAAO,SAASU,yBAAyBA,CAACX,UAAU,EAAE;EAClD,SAASY,gBAAgBA,CAACV,KAAK,EAAEC,YAAY,EAAE;IAC3C,IAAAU,SAAA,GAA0BjB,QAAQ,CAAC,KAAK,CAAC;MAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;MAAlCG,MAAM,GAAAF,UAAA;MAAEG,OAAO,GAAAH,UAAA;IACtB,IAAQR,QAAQ,GAAMN,UAAU,CAACE,KAAK,EAAEe,OAAO,CAAC,CAACZ,OAAO,CAAhDC,QAAQ;IAChBX,mBAAmB,CAACQ,YAAY,EAAE;MAAA,OAAIG,QAAQ;IAAA,EAAC;IAC/CZ,SAAS,CAAC,SAASwB,aAAaA,CAAA,EAAG;MAC/B,IAAIF,MAAM,EAAE;QACRV,QAAQ,CAACa,MAAM,CAAC,CAAC;MACrB;IACJ,CAAC,EAAE,CACCb,QAAQ,EACRU,MAAM,EACNd,KAAK,CAACM,QAAQ,CACjB,CAAC;IACF;IACA,IAAMY,WAAW,GAAGd,QAAQ,CAACe,YAAY;IACzC,OAAOD,WAAW,GAAG,aAAcvB,YAAY,CAACK,KAAK,CAACM,QAAQ,EAAEY,WAAW,CAAC,GAAG,IAAI;EACvF;EACA,OAAO,aAAc3B,UAAU,CAACmB,gBAAgB,CAAC;AACrD;AACA,OAAO,SAASU,mBAAmBA,CAACtB,UAAU,EAAE;EAC5C,SAASuB,aAAaA,CAACrB,KAAK,EAAEC,YAAY,EAAE;IACxC,IAAQG,QAAQ,GAAMN,UAAU,CAACE,KAAK,CAAC,CAACG,OAAO,CAAvCC,QAAQ;IAChBX,mBAAmB,CAACQ,YAAY,EAAE;MAAA,OAAIG,QAAQ;IAAA,EAAC;IAC/C,OAAO,IAAI;EACf;EACA,OAAO,aAAcb,UAAU,CAAC8B,aAAa,CAAC;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}