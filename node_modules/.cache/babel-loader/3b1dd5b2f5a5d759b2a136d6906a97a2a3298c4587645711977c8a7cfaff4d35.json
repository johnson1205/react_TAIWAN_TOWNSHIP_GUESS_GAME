{"ast":null,"code":"// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nexport default function (inputs) {\n  var outputs = {},\n    key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n}\nfunction geomifyObject(input) {\n  return input == null ? {\n    type: null\n  } : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection : input.type === \"Feature\" ? geomifyFeature : geomifyGeometry)(input);\n}\nfunction geomifyFeatureCollection(input) {\n  var output = {\n    type: \"GeometryCollection\",\n    geometries: input.features.map(geomifyFeature)\n  };\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry),\n    key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) {\n    output.properties = input.properties;\n    break;\n  }\n  return output;\n}\nfunction geomifyGeometry(input) {\n  if (input == null) return {\n    type: null\n  };\n  var output = input.type === \"GeometryCollection\" ? {\n    type: \"GeometryCollection\",\n    geometries: input.geometries.map(geomifyGeometry)\n  } : input.type === \"Point\" || input.type === \"MultiPoint\" ? {\n    type: input.type,\n    coordinates: input.coordinates\n  } : {\n    type: input.type,\n    arcs: input.coordinates\n  }; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}","map":{"version":3,"names":["inputs","outputs","key","geomifyObject","input","type","geomifyFeatureCollection","geomifyFeature","geomifyGeometry","output","geometries","features","map","bbox","geometry","id","properties","coordinates","arcs"],"sources":["C:/Users/johns/OneDrive/桌面/practice/map/node_modules/topojson-server/src/geometry.js"],"sourcesContent":["// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nexport default function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n}\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,eAAe,UAASA,MAAM,EAAE;EAC9B,IAAIC,OAAO,GAAG,CAAC,CAAC;IAAEC,GAAG;EACrB,KAAKA,GAAG,IAAIF,MAAM,EAAEC,OAAO,CAACC,GAAG,CAAC,GAAGC,aAAa,CAACH,MAAM,CAACE,GAAG,CAAC,CAAC;EAC7D,OAAOD,OAAO;AAChB;AAEA,SAASE,aAAaA,CAACC,KAAK,EAAE;EAC5B,OAAOA,KAAK,IAAI,IAAI,GAAG;IAACC,IAAI,EAAE;EAAI,CAAC,GAC7B,CAACD,KAAK,CAACC,IAAI,KAAK,mBAAmB,GAAGC,wBAAwB,GAC9DF,KAAK,CAACC,IAAI,KAAK,SAAS,GAAGE,cAAc,GACzCC,eAAe,EAAEJ,KAAK,CAAC;AAC/B;AAEA,SAASE,wBAAwBA,CAACF,KAAK,EAAE;EACvC,IAAIK,MAAM,GAAG;IAACJ,IAAI,EAAE,oBAAoB;IAAEK,UAAU,EAAEN,KAAK,CAACO,QAAQ,CAACC,GAAG,CAACL,cAAc;EAAC,CAAC;EACzF,IAAIH,KAAK,CAACS,IAAI,IAAI,IAAI,EAAEJ,MAAM,CAACI,IAAI,GAAGT,KAAK,CAACS,IAAI;EAChD,OAAOJ,MAAM;AACf;AAEA,SAASF,cAAcA,CAACH,KAAK,EAAE;EAC7B,IAAIK,MAAM,GAAGD,eAAe,CAACJ,KAAK,CAACU,QAAQ,CAAC;IAAEZ,GAAG,CAAC,CAAC;EACnD,IAAIE,KAAK,CAACW,EAAE,IAAI,IAAI,EAAEN,MAAM,CAACM,EAAE,GAAGX,KAAK,CAACW,EAAE;EAC1C,IAAIX,KAAK,CAACS,IAAI,IAAI,IAAI,EAAEJ,MAAM,CAACI,IAAI,GAAGT,KAAK,CAACS,IAAI;EAChD,KAAKX,GAAG,IAAIE,KAAK,CAACY,UAAU,EAAE;IAAEP,MAAM,CAACO,UAAU,GAAGZ,KAAK,CAACY,UAAU;IAAE;EAAO;EAC7E,OAAOP,MAAM;AACf;AAEA,SAASD,eAAeA,CAACJ,KAAK,EAAE;EAC9B,IAAIA,KAAK,IAAI,IAAI,EAAE,OAAO;IAACC,IAAI,EAAE;EAAI,CAAC;EACtC,IAAII,MAAM,GAAGL,KAAK,CAACC,IAAI,KAAK,oBAAoB,GAAG;IAACA,IAAI,EAAE,oBAAoB;IAAEK,UAAU,EAAEN,KAAK,CAACM,UAAU,CAACE,GAAG,CAACJ,eAAe;EAAC,CAAC,GAC5HJ,KAAK,CAACC,IAAI,KAAK,OAAO,IAAID,KAAK,CAACC,IAAI,KAAK,YAAY,GAAG;IAACA,IAAI,EAAED,KAAK,CAACC,IAAI;IAAEY,WAAW,EAAEb,KAAK,CAACa;EAAW,CAAC,GAC1G;IAACZ,IAAI,EAAED,KAAK,CAACC,IAAI;IAAEa,IAAI,EAAEd,KAAK,CAACa;EAAW,CAAC,CAAC,CAAC;EACnD,IAAIb,KAAK,CAACS,IAAI,IAAI,IAAI,EAAEJ,MAAM,CAACI,IAAI,GAAGT,KAAK,CAACS,IAAI;EAChD,OAAOJ,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}