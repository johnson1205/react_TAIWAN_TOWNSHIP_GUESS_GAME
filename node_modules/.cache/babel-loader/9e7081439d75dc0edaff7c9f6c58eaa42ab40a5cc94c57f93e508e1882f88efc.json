{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/johns/OneDrive/\\u684C\\u9762/practice/map/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"C:/Users/johns/OneDrive/\\u684C\\u9762/practice/map/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"C:/Users/johns/OneDrive/\\u684C\\u9762/practice/map/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _classCallCheck from \"C:/Users/johns/OneDrive/\\u684C\\u9762/practice/map/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/johns/OneDrive/\\u684C\\u9762/practice/map/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nvar Voronoi = /*#__PURE__*/function () {\n  function Voronoi(delaunay) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 960, 500],\n      _ref2 = _slicedToArray(_ref, 4),\n      xmin = _ref2[0],\n      ymin = _ref2[1],\n      xmax = _ref2[2],\n      ymax = _ref2[3];\n    _classCallCheck(this, Voronoi);\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  _createClass(Voronoi, [{\n    key: \"update\",\n    value: function update() {\n      this.delaunay.update();\n      this._init();\n      return this;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this$delaunay = this.delaunay,\n        points = _this$delaunay.points,\n        hull = _this$delaunay.hull,\n        triangles = _this$delaunay.triangles,\n        vectors = this.vectors;\n      var bx, by; // lazily computed barycenter of the hull\n\n      // Compute circumcenters.\n      var circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n      for (var i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n        var t1 = triangles[i] * 2;\n        var t2 = triangles[i + 1] * 2;\n        var t3 = triangles[i + 2] * 2;\n        var _x = points[t1];\n        var _y = points[t1 + 1];\n        var x2 = points[t2];\n        var y2 = points[t2 + 1];\n        var x3 = points[t3];\n        var y3 = points[t3 + 1];\n        var dx = x2 - _x;\n        var dy = y2 - _y;\n        var ex = x3 - _x;\n        var ey = y3 - _y;\n        var ab = (dx * ey - dy * ex) * 2;\n        if (Math.abs(ab) < 1e-9) {\n          // For a degenerate triangle, the circumcenter is at the infinity, in a\n          // direction orthogonal to the halfedge and away from the “center” of\n          // the diagram <bx, by>, defined as the hull’s barycenter.\n          if (bx === undefined) {\n            bx = by = 0;\n            var _iterator = _createForOfIteratorHelper(hull),\n              _step;\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var _i = _step.value;\n                bx += points[_i * 2], by += points[_i * 2 + 1];\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n            bx /= hull.length, by /= hull.length;\n          }\n          var a = 1e9 * Math.sign((bx - _x) * ey - (by - _y) * ex);\n          x = (_x + x3) / 2 - a * ey;\n          y = (_y + y3) / 2 + a * ex;\n        } else {\n          var d = 1 / ab;\n          var bl = dx * dx + dy * dy;\n          var cl = ex * ex + ey * ey;\n          x = _x + (ey * bl - dy * cl) * d;\n          y = _y + (dx * cl - ex * bl) * d;\n        }\n        circumcenters[j] = x;\n        circumcenters[j + 1] = y;\n      }\n\n      // Compute exterior cell rays.\n      var h = hull[hull.length - 1];\n      var p0,\n        p1 = h * 4;\n      var x0,\n        x1 = points[2 * h];\n      var y0,\n        y1 = points[2 * h + 1];\n      vectors.fill(0);\n      for (var _i2 = 0; _i2 < hull.length; ++_i2) {\n        h = hull[_i2];\n        p0 = p1, x0 = x1, y0 = y1;\n        p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n        vectors[p0 + 2] = vectors[p1] = y0 - y1;\n        vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var _this$delaunay2 = this.delaunay,\n        halfedges = _this$delaunay2.halfedges,\n        inedges = _this$delaunay2.inedges,\n        hull = _this$delaunay2.hull,\n        circumcenters = this.circumcenters,\n        vectors = this.vectors;\n      if (hull.length <= 1) return null;\n      for (var i = 0, n = halfedges.length; i < n; ++i) {\n        var j = halfedges[i];\n        if (j < i) continue;\n        var ti = Math.floor(i / 3) * 2;\n        var tj = Math.floor(j / 3) * 2;\n        var xi = circumcenters[ti];\n        var yi = circumcenters[ti + 1];\n        var xj = circumcenters[tj];\n        var yj = circumcenters[tj + 1];\n        this._renderSegment(xi, yi, xj, yj, context);\n      }\n      var h0,\n        h1 = hull[hull.length - 1];\n      for (var _i3 = 0; _i3 < hull.length; ++_i3) {\n        h0 = h1, h1 = hull[_i3];\n        var t = Math.floor(inedges[h1] / 3) * 2;\n        var x = circumcenters[t];\n        var y = circumcenters[t + 1];\n        var v = h0 * 4;\n        var p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n        if (p) this._renderSegment(x, y, p[0], p[1], context);\n      }\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderBounds\",\n    value: function renderBounds(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderCell\",\n    value: function renderCell(i, context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this._clip(i);\n      if (points === null || !points.length) return;\n      context.moveTo(points[0], points[1]);\n      var n = points.length;\n      while (points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1) n -= 2;\n      for (var _i4 = 2; _i4 < n; _i4 += 2) {\n        if (points[_i4] !== points[_i4 - 2] || points[_i4 + 1] !== points[_i4 - 1]) context.lineTo(points[_i4], points[_i4 + 1]);\n      }\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"cellPolygons\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function cellPolygons() {\n      var points, i, n, cell;\n      return _regeneratorRuntime().wrap(function cellPolygons$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            points = this.delaunay.points;\n            i = 0, n = points.length / 2;\n          case 2:\n            if (!(i < n)) {\n              _context.next = 11;\n              break;\n            }\n            cell = this.cellPolygon(i);\n            if (!cell) {\n              _context.next = 8;\n              break;\n            }\n            cell.index = i;\n            _context.next = 8;\n            return cell;\n          case 8:\n            ++i;\n            _context.next = 2;\n            break;\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, cellPolygons, this);\n    })\n  }, {\n    key: \"cellPolygon\",\n    value: function cellPolygon(i) {\n      var polygon = new Polygon();\n      this.renderCell(i, polygon);\n      return polygon.value();\n    }\n  }, {\n    key: \"_renderSegment\",\n    value: function _renderSegment(x0, y0, x1, y1, context) {\n      var S;\n      var c0 = this._regioncode(x0, y0);\n      var c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n      } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n        context.moveTo(S[0], S[1]);\n        context.lineTo(S[2], S[3]);\n      }\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(i, x, y) {\n      if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n      return this.delaunay._step(i, x, y) === i;\n    }\n  }, {\n    key: \"neighbors\",\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function neighbors(i) {\n      var ci, _iterator2, _step2, j, cj, ai, li, aj, lj;\n      return _regeneratorRuntime().wrap(function neighbors$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            ci = this._clip(i);\n            if (!ci) {\n              _context2.next = 33;\n              break;\n            }\n            _iterator2 = _createForOfIteratorHelper(this.delaunay.neighbors(i));\n            _context2.prev = 3;\n            _iterator2.s();\n          case 5:\n            if ((_step2 = _iterator2.n()).done) {\n              _context2.next = 25;\n              break;\n            }\n            j = _step2.value;\n            cj = this._clip(j); // find the common edge\n            if (!cj) {\n              _context2.next = 23;\n              break;\n            }\n            ai = 0, li = ci.length;\n          case 10:\n            if (!(ai < li)) {\n              _context2.next = 23;\n              break;\n            }\n            aj = 0, lj = cj.length;\n          case 12:\n            if (!(aj < lj)) {\n              _context2.next = 20;\n              break;\n            }\n            if (!(ci[ai] === cj[aj] && ci[ai + 1] === cj[aj + 1] && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj])) {\n              _context2.next = 17;\n              break;\n            }\n            _context2.next = 16;\n            return j;\n          case 16:\n            return _context2.abrupt(\"break\", 23);\n          case 17:\n            aj += 2;\n            _context2.next = 12;\n            break;\n          case 20:\n            ai += 2;\n            _context2.next = 10;\n            break;\n          case 23:\n            _context2.next = 5;\n            break;\n          case 25:\n            _context2.next = 30;\n            break;\n          case 27:\n            _context2.prev = 27;\n            _context2.t0 = _context2[\"catch\"](3);\n            _iterator2.e(_context2.t0);\n          case 30:\n            _context2.prev = 30;\n            _iterator2.f();\n            return _context2.finish(30);\n          case 33:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, neighbors, this, [[3, 27, 30, 33]]);\n    })\n  }, {\n    key: \"_cell\",\n    value: function _cell(i) {\n      var circumcenters = this.circumcenters,\n        _this$delaunay3 = this.delaunay,\n        inedges = _this$delaunay3.inedges,\n        halfedges = _this$delaunay3.halfedges,\n        triangles = _this$delaunay3.triangles;\n      var e0 = inedges[i];\n      if (e0 === -1) return null; // coincident point\n      var points = [];\n      var e = e0;\n      do {\n        var t = Math.floor(e / 3);\n        points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n        e = e % 3 === 2 ? e - 2 : e + 1;\n        if (triangles[e] !== i) break; // bad triangulation\n        e = halfedges[e];\n      } while (e !== e0 && e !== -1);\n      return points;\n    }\n  }, {\n    key: \"_clip\",\n    value: function _clip(i) {\n      // degenerate case (1 valid point: return the box)\n      if (i === 0 && this.delaunay.hull.length === 1) {\n        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n      }\n      var points = this._cell(i);\n      if (points === null) return null;\n      var V = this.vectors;\n      var v = i * 4;\n      return this._simplify(V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points));\n    }\n  }, {\n    key: \"_clipFinite\",\n    value: function _clipFinite(i, points) {\n      var n = points.length;\n      var P = null;\n      var x0,\n        y0,\n        x1 = points[n - 2],\n        y1 = points[n - 1];\n      var c0,\n        c1 = this._regioncode(x1, y1);\n      var e0,\n        e1 = 0;\n      for (var j = 0; j < n; j += 2) {\n        x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n        c0 = c1, c1 = this._regioncode(x1, y1);\n        if (c0 === 0 && c1 === 0) {\n          e0 = e1, e1 = 0;\n          if (P) P.push(x1, y1);else P = [x1, y1];\n        } else {\n          var S = void 0,\n            sx0 = void 0,\n            sy0 = void 0,\n            sx1 = void 0,\n            sy1 = void 0;\n          if (c0 === 0) {\n            if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n            var _S = S;\n            var _S2 = _slicedToArray(_S, 4);\n            sx0 = _S2[0];\n            sy0 = _S2[1];\n            sx1 = _S2[2];\n            sy1 = _S2[3];\n          } else {\n            if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n            var _S3 = S;\n            var _S4 = _slicedToArray(_S3, 4);\n            sx1 = _S4[0];\n            sy1 = _S4[1];\n            sx0 = _S4[2];\n            sy0 = _S4[3];\n            e0 = e1, e1 = this._edgecode(sx0, sy0);\n            if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n            if (P) P.push(sx0, sy0);else P = [sx0, sy0];\n          }\n          e0 = e1, e1 = this._edgecode(sx1, sy1);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx1, sy1);else P = [sx1, sy1];\n        }\n      }\n      if (P) {\n        e0 = e1, e1 = this._edgecode(P[0], P[1]);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n      } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n      }\n      return P;\n    }\n  }, {\n    key: \"_clipSegment\",\n    value: function _clipSegment(x0, y0, x1, y1, c0, c1) {\n      // for more robustness, always consider the segment in the same order\n      var flip = c0 < c1;\n      if (flip) {\n        var _ref3 = [x1, y1, x0, y0, c1, c0];\n        x0 = _ref3[0];\n        y0 = _ref3[1];\n        x1 = _ref3[2];\n        y1 = _ref3[3];\n        c0 = _ref3[4];\n        c1 = _ref3[5];\n      }\n      while (true) {\n        if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\n        if (c0 & c1) return null;\n        var x = void 0,\n          y = void 0,\n          c = c0 || c1;\n        if (c & 8) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;else if (c & 4) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;else if (c & 2) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n        if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n      }\n    }\n  }, {\n    key: \"_clipInfinite\",\n    value: function _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n      var P = Array.from(points),\n        p;\n      if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n      if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n      if (P = this._clipFinite(i, P)) {\n        for (var j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n          c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n          if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n        }\n      } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n        P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n      }\n      return P;\n    }\n  }, {\n    key: \"_edge\",\n    value: function _edge(i, e0, e1, P, j) {\n      while (e0 !== e1) {\n        var x = void 0,\n          y = void 0;\n        switch (e0) {\n          case 5:\n            e0 = 4;\n            continue;\n          // top-left\n          case 4:\n            e0 = 6, x = this.xmax, y = this.ymin;\n            break;\n          // top\n          case 6:\n            e0 = 2;\n            continue;\n          // top-right\n          case 2:\n            e0 = 10, x = this.xmax, y = this.ymax;\n            break;\n          // right\n          case 10:\n            e0 = 8;\n            continue;\n          // bottom-right\n          case 8:\n            e0 = 9, x = this.xmin, y = this.ymax;\n            break;\n          // bottom\n          case 9:\n            e0 = 1;\n            continue;\n          // bottom-left\n          case 1:\n            e0 = 5, x = this.xmin, y = this.ymin;\n            break;\n          // left\n        }\n        // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n        // undefined, the conditional statement will be executed.\n        if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n          P.splice(j, 0, x, y), j += 2;\n        }\n      }\n      return j;\n    }\n  }, {\n    key: \"_project\",\n    value: function _project(x0, y0, vx, vy) {\n      var t = Infinity,\n        c,\n        x,\n        y;\n      if (vy < 0) {\n        // top\n        if (y0 <= this.ymin) return null;\n        if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n      } else if (vy > 0) {\n        // bottom\n        if (y0 >= this.ymax) return null;\n        if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n      }\n      if (vx > 0) {\n        // right\n        if (x0 >= this.xmax) return null;\n        if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n      } else if (vx < 0) {\n        // left\n        if (x0 <= this.xmin) return null;\n        if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n      }\n      return [x, y];\n    }\n  }, {\n    key: \"_edgecode\",\n    value: function _edgecode(x, y) {\n      return (x === this.xmin ? 1 : x === this.xmax ? 2 : 0) | (y === this.ymin ? 4 : y === this.ymax ? 8 : 0);\n    }\n  }, {\n    key: \"_regioncode\",\n    value: function _regioncode(x, y) {\n      return (x < this.xmin ? 1 : x > this.xmax ? 2 : 0) | (y < this.ymin ? 4 : y > this.ymax ? 8 : 0);\n    }\n  }, {\n    key: \"_simplify\",\n    value: function _simplify(P) {\n      if (P && P.length > 4) {\n        for (var i = 0; i < P.length; i += 2) {\n          var j = (i + 2) % P.length,\n            k = (i + 4) % P.length;\n          if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\n            P.splice(j, 2), i -= 2;\n          }\n        }\n        if (!P.length) P = null;\n      }\n      return P;\n    }\n  }]);\n  return Voronoi;\n}();\nexport { Voronoi as default };","map":{"version":3,"names":["Path","Polygon","Voronoi","delaunay","_ref","arguments","length","undefined","_ref2","_slicedToArray","xmin","ymin","xmax","ymax","_classCallCheck","Error","_circumcenters","Float64Array","points","vectors","_init","_createClass","key","value","update","_this$delaunay","hull","triangles","bx","by","circumcenters","subarray","i","j","n","x","y","t1","t2","t3","x1","y1","x2","y2","x3","y3","dx","dy","ex","ey","ab","Math","abs","_iterator","_createForOfIteratorHelper","_step","s","done","err","e","f","a","sign","d","bl","cl","h","p0","p1","x0","y0","fill","render","context","buffer","_this$delaunay2","halfedges","inedges","ti","floor","tj","xi","yi","xj","yj","_renderSegment","h0","h1","t","v","p","_project","renderBounds","rect","renderCell","_clip","moveTo","lineTo","closePath","_regeneratorRuntime","mark","cellPolygons","cell","wrap","cellPolygons$","_context","prev","next","cellPolygon","index","stop","polygon","S","c0","_regioncode","c1","_clipSegment","contains","neighbors","ci","_iterator2","_step2","cj","ai","li","aj","lj","neighbors$","_context2","abrupt","t0","finish","_cell","_this$delaunay3","e0","push","V","_simplify","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_S","_S2","_S3","_S4","_edgecode","_edge","flip","_ref3","c","vx0","vy0","vxn","vyn","Array","from","unshift","splice","vx","vy","Infinity","k","default"],"sources":["C:/Users/johns/node_modules/d3-delaunay/src/voronoi.js"],"sourcesContent":["import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n    let bx, by; // lazily computed barycenter of the hull\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // For a degenerate triangle, the circumcenter is at the infinity, in a\n        // direction orthogonal to the halfedge and away from the “center” of\n        // the diagram <bx, by>, defined as the hull’s barycenter.\n        if (bx === undefined) {\n          bx = by = 0;\n          for (const i of hull) bx += points[i * 2], by += points[i * 2 + 1];\n          bx /= hull.length, by /= hull.length;\n        }\n        const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] === cj[aj]\n              && ci[ai + 1] === cj[aj + 1]\n              && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj]\n              && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return this._simplify(V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points));\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    // for more robustness, always consider the segment in the same order\n    const flip = c0 < c1;\n    if (flip) [x0, y0, x1, y1, c0, c1] = [x1, y1, x0, y0, c1, c0];\n    while (true) {\n      if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n  _simplify(P) {\n    if (P && P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\n          P.splice(j, 2), i -= 2;\n        }\n      }\n      if (!P.length) P = null;\n    }\n    return P;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}