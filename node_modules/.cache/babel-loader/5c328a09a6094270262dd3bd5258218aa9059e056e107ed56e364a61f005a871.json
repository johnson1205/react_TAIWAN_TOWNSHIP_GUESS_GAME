{"ast":null,"code":"export default function (topology) {\n  var ownerByArc = new Array(topology.arcs.length),\n    // arc index -> index of unique associated ring, or -1 if used by multiple rings\n    ownerIndex = 0,\n    key;\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(testGeometry);\n        break;\n      case \"Polygon\":\n        testArcs(o.arcs);\n        break;\n      case \"MultiPolygon\":\n        o.arcs.forEach(testArcs);\n        break;\n    }\n  }\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var owner = ownerByArc[arc];\n        if (owner == null) ownerByArc[arc] = ownerIndex;else if (owner !== ownerIndex) ownerByArc[arc] = -1;\n      }\n    }\n  }\n  for (key in topology.objects) {\n    testGeometry(topology.objects[key]);\n  }\n  return function (ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n}","map":{"version":3,"names":["topology","ownerByArc","Array","arcs","length","ownerIndex","key","testGeometry","o","type","geometries","forEach","testArcs","i","n","ring","j","m","arc","owner","objects"],"sources":["C:/Users/johns/OneDrive/桌面/practice/map/node_modules/topojson-simplify/src/filterAttached.js"],"sourcesContent":["export default function(topology) {\n  var ownerByArc = new Array(topology.arcs.length), // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ownerIndex = 0,\n      key;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var owner = ownerByArc[arc];\n        if (owner == null) ownerByArc[arc] = ownerIndex;\n        else if (owner !== ownerIndex) ownerByArc[arc] = -1;\n      }\n    }\n  }\n\n  for (key in topology.objects) {\n    testGeometry(topology.objects[key]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n"],"mappings":"AAAA,eAAe,UAASA,QAAQ,EAAE;EAChC,IAAIC,UAAU,GAAG,IAAIC,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC;IAAE;IAC9CC,UAAU,GAAG,CAAC;IACdC,GAAG;EAEP,SAASC,YAAYA,CAACC,CAAC,EAAE;IACvB,QAAQA,CAAC,CAACC,IAAI;MACZ,KAAK,oBAAoB;QAAED,CAAC,CAACE,UAAU,CAACC,OAAO,CAACJ,YAAY,CAAC;QAAE;MAC/D,KAAK,SAAS;QAAEK,QAAQ,CAACJ,CAAC,CAACL,IAAI,CAAC;QAAE;MAClC,KAAK,cAAc;QAAEK,CAAC,CAACL,IAAI,CAACQ,OAAO,CAACC,QAAQ,CAAC;QAAE;IACjD;EACF;EAEA,SAASA,QAAQA,CAACT,IAAI,EAAE;IACtB,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGX,IAAI,CAACC,MAAM,EAAES,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE,EAAER,UAAU,EAAE;MACzD,KAAK,IAAIU,IAAI,GAAGZ,IAAI,CAACU,CAAC,CAAC,EAAEG,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGF,IAAI,CAACX,MAAM,EAAEY,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;QAC3D,IAAIE,GAAG,GAAGH,IAAI,CAACC,CAAC,CAAC;QACjB,IAAIE,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,CAACA,GAAG;QACvB,IAAIC,KAAK,GAAGlB,UAAU,CAACiB,GAAG,CAAC;QAC3B,IAAIC,KAAK,IAAI,IAAI,EAAElB,UAAU,CAACiB,GAAG,CAAC,GAAGb,UAAU,CAAC,KAC3C,IAAIc,KAAK,KAAKd,UAAU,EAAEJ,UAAU,CAACiB,GAAG,CAAC,GAAG,CAAC,CAAC;MACrD;IACF;EACF;EAEA,KAAKZ,GAAG,IAAIN,QAAQ,CAACoB,OAAO,EAAE;IAC5Bb,YAAY,CAACP,QAAQ,CAACoB,OAAO,CAACd,GAAG,CAAC,CAAC;EACrC;EAEA,OAAO,UAASS,IAAI,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGF,IAAI,CAACX,MAAM,EAAEc,GAAG,EAAEF,CAAC,GAAGC,CAAC,EAAE,EAAED,CAAC,EAAE;MAChD,IAAIf,UAAU,CAAC,CAACiB,GAAG,GAAGH,IAAI,CAACC,CAAC,CAAC,IAAI,CAAC,GAAG,CAACE,GAAG,GAAGA,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QACvD,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}