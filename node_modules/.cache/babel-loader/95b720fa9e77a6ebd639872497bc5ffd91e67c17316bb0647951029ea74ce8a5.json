{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johns\\\\OneDrive\\\\\\u684C\\u9762\\\\practice\\\\map\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport { MapContainer, TileLayer, useMap } from 'react-leaflet';\nimport { Map, GeoJSON } from 'react-leaflet/GeoJSON';\nimport mapdata from \"./geo.json\";\nimport { color } from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //./TOWN_MOI_1120317.json\n  /*\n  const geoEvent = (mapdata.features, layer) => {\n   };\n  */\n  /*\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      */\n  const {\n    useState\n  } = React;\n  let [selectedTownName, setSelectedTownName] = useState();\n  const mapFeature = (country, layer) => {\n    console.log(country);\n    layer.on({\n      click: e => {\n        setSelectedTownName(selectedTownName = e.sourceTarget.feature.properties.TOWNNAME);\n      }\n    });\n  };\n  const mapStyle = {\n    weight: 1,\n    fillOpacity: 1,\n    fillColor: \"rgb(128, 206, 197)\",\n    color: \"rgb(230,230,230)\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [23.6, 120.9738819],\n      zoom: 7,\n      minZoom: 7,\n      bounds: (latLng(26.347812977293938, 117.6697971586488), latLng()),\n      children: /*#__PURE__*/_jsxDEV(GeoJSON, {\n        style: mapStyle,\n        data: mapdata,\n        onEachFeature: mapFeature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: selectedTownName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"b8C7fxUCuBUZdmLZRIveA8Bx7rc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","MapContainer","TileLayer","useMap","Map","GeoJSON","mapdata","color","jsxDEV","_jsxDEV","App","_s","useState","selectedTownName","setSelectedTownName","mapFeature","country","layer","console","log","on","click","e","sourceTarget","feature","properties","TOWNNAME","mapStyle","weight","fillOpacity","fillColor","className","children","center","zoom","minZoom","bounds","latLng","style","data","onEachFeature","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/johns/OneDrive/桌面/practice/map/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport { MapContainer, TileLayer, useMap } from 'react-leaflet'\nimport { Map, GeoJSON } from 'react-leaflet/GeoJSON'\nimport mapdata from \"./geo.json\"\nimport { color } from 'd3';\n\n\nfunction App() {\n  //./TOWN_MOI_1120317.json\n  /*\n  const geoEvent = (mapdata.features, layer) => {\n\n  };\n  */\n  /*\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      */\n  const {useState} = React;\n  let [selectedTownName, setSelectedTownName] = useState();\n  const mapFeature=(country, layer)=>{\n    console.log(country);\n\n    layer.on({\n      click: (e) => {\n        setSelectedTownName(selectedTownName=e.sourceTarget.feature.properties.TOWNNAME);\n      }\n    });\n  }\n  const mapStyle={\n    weight: 1,\n    fillOpacity: 1,\n    fillColor: \"rgb(128, 206, 197)\",\n    color: \"rgb(230,230,230)\",\n  };\n\n  return (\n    <div className='container'>\n      <MapContainer center={[23.6, 120.9738819]} zoom={7} minZoom={7} bounds={latLng(26.347812977293938, 117.6697971586488), latLng()}>\n      \n      <GeoJSON style={mapStyle} data={mapdata} onEachFeature={mapFeature}></GeoJSON>\n      </MapContainer>\n      <div className='right'>{selectedTownName}</div>\n    </div>\n  ); \n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAC/D,SAASC,GAAG,EAAEC,OAAO,QAAQ,uBAAuB;AACpD,OAAOC,OAAO,MAAM,YAAY;AAChC,SAASC,KAAK,QAAQ,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG3B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;AACF;AACA;AACA;EAEE;AACF;AACA;AACA;AACA;AACA;EACE,MAAM;IAACC;EAAQ,CAAC,GAAGZ,KAAK;EACxB,IAAI,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGF,QAAQ,CAAC,CAAC;EACxD,MAAMG,UAAU,GAACA,CAACC,OAAO,EAAEC,KAAK,KAAG;IACjCC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IAEpBC,KAAK,CAACG,EAAE,CAAC;MACPC,KAAK,EAAGC,CAAC,IAAK;QACZR,mBAAmB,CAACD,gBAAgB,GAACS,CAAC,CAACC,YAAY,CAACC,OAAO,CAACC,UAAU,CAACC,QAAQ,CAAC;MAClF;IACF,CAAC,CAAC;EACJ,CAAC;EACD,MAAMC,QAAQ,GAAC;IACbC,MAAM,EAAE,CAAC;IACTC,WAAW,EAAE,CAAC;IACdC,SAAS,EAAE,oBAAoB;IAC/BvB,KAAK,EAAE;EACT,CAAC;EAED,oBACEE,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvB,OAAA,CAACR,YAAY;MAACgC,MAAM,EAAE,CAAC,IAAI,EAAE,WAAW,CAAE;MAACC,IAAI,EAAE,CAAE;MAACC,OAAO,EAAE,CAAE;MAACC,MAAM,GAAEC,MAAM,CAAC,kBAAkB,EAAE,iBAAiB,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC;MAAAL,QAAA,eAEhIvB,OAAA,CAACJ,OAAO;QAACiC,KAAK,EAAEX,QAAS;QAACY,IAAI,EAAEjC,OAAQ;QAACkC,aAAa,EAAEzB;MAAW;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eACfnC,OAAA;MAAKsB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEnB;IAAgB;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACjC,EAAA,CAxCQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA0CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}